{"version":3,"sources":["webpack:///./src/pages/user/user-form.js"],"names":["UserFormPage","props","state","data","name","email","handleChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","dispatch","userActions","save","id","componentDidMount","get","getDerivedStateFromProps","newState","user","single","render","title","class","method","onSubmit","type","onChange","placeholder","isGrouped","isColor","isLoading","loading","to","className","Component","connect"],"mappings":"sVASMA,E,oBAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKC,MAAQ,CACXC,KAAM,CACJC,KAAM,GACNC,MAAO,KAIX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,MACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,MAXH,E,kHAcnBD,aAAA,SAAaG,GAAI,IAAD,EACNN,EAASO,KAAKR,MAAdC,KACRO,KAAKC,SAAS,CACZR,KAAK,OAAD,UACCA,GADD,OAEDM,EAAEG,OAAOR,MAAOK,EAAEG,OAAOC,MAFxB,O,EAORL,aAAA,SAAaC,GACXA,EAAEK,iBACF,IAAIX,EAAOO,KAAKR,MAAMC,KACtBO,KAAKT,MAAMc,SAASC,IAAYC,KAAKd,EAAMO,KAAKT,MAAMiB,M,EAGxDC,kBAAA,WACET,KAAKT,MAAMc,SAASC,IAAYI,IAAIV,KAAKT,MAAMiB,M,EAG1CG,yBAAP,SAAgCpB,EAAOC,GACrC,IAAIoB,EAAWpB,EAEf,GAAID,EAAMsB,KAAKC,QAAUtB,EAAMqB,OAAStB,EAAMsB,KAAKC,OAAO,CACxD,IAAID,EAAOtB,EAAMsB,KAAKC,OACtBF,EAAQ,iBACHA,EADG,CAENC,OACApB,KAAM,CACJC,KAAMmB,EAAKnB,KACXC,MAAOkB,EAAKlB,SAKlB,OAAOiB,G,EAGTG,OAAA,WAAU,IAAD,OACCF,EAASb,KAAKT,MAAdsB,KACApB,EAASO,KAAKR,MAAdC,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKuB,MAAM,mBACX,kBAAC,QAAD,aACA,kBAAC,WAAD,kBAEA,yBAAKC,MAAM,oBACT,yBAAKA,MAAM,yBACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,8BACT,6BAASA,MAAM,iBACb,0BACEC,OAAO,OACPC,SAAU,SAAApB,GACR,EAAKD,aAAaC,KAGtB,kBAAC,QAAD,KACE,kBAAC,QAAD,aACA,kBAAC,UAAD,KACI,kBAAC,QAAD,CACAqB,KAAK,OACL1B,KAAK,OACLS,MAAOV,EAAKC,KACZ2B,SAAUrB,KAAKJ,aACf0B,YAAY,WAGlB,kBAAC,QAAD,KACE,kBAAC,QAAD,cACA,kBAAC,UAAD,KACI,kBAAC,QAAD,CACAF,KAAK,OACL1B,KAAK,QACLS,MAAOV,EAAKE,MACZ0B,SAAUrB,KAAKJ,aACf0B,YAAY,YAGlB,kBAAC,QAAD,CAAOC,WAAS,GACd,kBAAC,UAAD,KACE,kBAAC,SAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAASK,UAAWZ,EAAKa,SAAxD,WAEF,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,QAAQC,UAAU,kBAA3B,aAOR,yBAAKX,MAAM,kBACT,6BAASA,MAAM,wB,GA9GJY,aAgIZC,6BAJS,SAAC,GACvB,MAAO,CAAEjB,KAD2B,EAAXA,QAIZiB,CAAyBxC","file":"component---src-pages-user-user-form-js-b466954621f1209fb8ad.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { connect } from \"react-redux\";\nimport { userActions } from '../../redux/actions/';\n\nimport { Title, Subtitle, Field, Label, Control, Input, Button } from 'bloomer';\n\nclass UserFormPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {\n        name: '',\n        email: ''\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { data } = this.state\n    this.setState({\n      data: {\n        ...data,\n        [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    let data = this.state.data\n    this.props.dispatch(userActions.save(data, this.props.id))\n  }\n\n  componentDidMount() {\n    this.props.dispatch(userActions.get(this.props.id))\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let newState = state\n\n    if (props.user.single && state.user !== props.user.single){\n      let user = props.user.single\n      newState = {\n        ...newState,\n        user,\n        data: {\n          name: user.name,\n          email: user.email\n        }\n      }\n    }\n\n    return newState\n  }\n\n  render() {\n    const { user } = this.props\n    const { data } = this.state\n\n    return (\n      <Layout>\n        <SEO title=\"Edit data user\"/>\n        <Title>User</Title>\n        <Subtitle>Edit Data</Subtitle>\n\n        <div class=\"tile is-ancestor\">\n          <div class=\"tile is-vertical is-8\">\n            <div class=\"tile\">\n              <div class=\"tile is-parent is-vertical\">\n                <article class=\"tile is-child\">\n                  <form\n                    method=\"post\"\n                    onSubmit={e => {\n                      this.handleSubmit(e)\n                    }}\n                  >\n                  <Field>\n                    <Label>Name</Label>\n                    <Control>\n                        <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={data.name}\n                        onChange={this.handleChange}\n                        placeholder='Name' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Email</Label>\n                    <Control>\n                        <Input\n                        type=\"text\"\n                        name=\"email\"\n                        value={data.email}\n                        onChange={this.handleChange}\n                        placeholder='Email' />\n                    </Control>\n                  </Field>\n                  <Field isGrouped>\n                    <Control>\n                      <Button isColor='primary' type='submit' isLoading={user.loading}>Submit</Button>\n                    </Control>\n                    <Control>\n                      <Link to=\"/user\" className=\"button is-link\">Back</Link>\n                    </Control>\n                  </Field>\n                  </form>\n                </article>\n\n              </div>\n              <div class=\"tile is-parent\">\n                <article class=\"tile is-child\">\n\n                </article>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </Layout>\n    )\n  }\n\n}\n\nconst mapStateToProps = ({ user }) => {\n  return { user }\n}\n\nexport default connect(mapStateToProps)(UserFormPage);\n"],"sourceRoot":""}