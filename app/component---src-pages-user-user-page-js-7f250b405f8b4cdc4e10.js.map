{"version":3,"sources":["webpack:///./src/pages/user/user-page.js"],"names":["UserPage","props","state","list","handleDelete","bind","user","this","dispatch","userActions","remove","id","componentDidMount","getAll","getDerivedStateFromProps","newState","render","title","isBordered","isStriped","isNarrow","length","map","u","index","key","name","email","to","className","onClick","Component","connect"],"mappings":"2NAQMA,E,oBAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKC,MAAQ,CACXC,KAAM,IAGR,EAAKC,aAAe,EAAKA,aAAaC,K,yHAAlB,KAPH,E,kHAWnBD,aAAA,SAAaE,GACXC,KAAKN,MAAMO,SAASC,IAAYC,OAAOJ,EAAKK,M,EAI9CC,kBAAA,WACEL,KAAKN,MAAMO,SAASC,IAAYI,W,EAG3BC,yBAAP,SAAgCb,EAAOC,GACrC,IAAIa,EAAWb,EAEf,GAAID,EAAMK,KAAKH,KAAK,CAClB,IAAIA,EAAOF,EAAMK,KAAKH,KACtBY,EAAQ,iBACHA,EADG,CAENZ,SAIJ,OAAOY,G,EAGTC,OAAA,WAAW,IAAD,OACAb,EAASI,KAAKL,MAAdC,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKc,MAAM,0BACX,kBAAC,QAAD,aACA,kBAAC,WAAD,8BACA,kBAAC,QAAD,CAAOC,YAAU,EAACC,WAAS,EAACC,UAAQ,GAClC,+BACI,4BACI,oCACA,qCACA,+BAGR,+BACEjB,EAAKkB,OAAS,GAAKlB,EAAKmB,KAAI,SAACC,EAAGC,GAAJ,OAC1B,wBAAIC,IAAMD,GACR,4BAAMD,EAAEG,MACR,4BAAMH,EAAEI,OACR,4BACA,kBAAC,IAAD,CAAMC,GAAE,SAAWL,EAAEZ,GAAb,QAAwBkB,UAAU,mBAA1C,QADA,IAIA,kBAAC,SAAD,CAAQA,UAAU,mBAAmBC,QAAS,kBAAM,EAAK1B,aAAamB,KAAtE,mB,GA7DOQ,aA+ERC,6BAJS,SAAC,GACvB,MAAO,CAAE1B,KAD2B,EAAXA,QAIZ0B,CAAyBhC","file":"component---src-pages-user-user-page-js-7f250b405f8b4cdc4e10.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { connect } from \"react-redux\";\nimport { userActions } from '../../redux/actions/';\nimport { Title, Subtitle, Table, Button } from 'bloomer';\n\nclass UserPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: []\n    }\n\n    this.handleDelete = this.handleDelete.bind(this)\n\n  }\n\n  handleDelete(user) {\n    this.props.dispatch(userActions.remove(user.id))\n\n  }\n\n  componentDidMount() {\n    this.props.dispatch(userActions.getAll())\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let newState = state\n\n    if (props.user.list){\n      let list = props.user.list\n      newState = {\n        ...newState,\n        list\n      }\n    }\n\n    return newState\n  }\n\n  render () {\n    const { list } = this.state\n\n    return (\n      <Layout>\n        <SEO title=\"Menampilkan data user\"/>\n        <Title>User</Title>\n        <Subtitle>Menampilkan data user</Subtitle>\n        <Table isBordered isStriped isNarrow>\n          <thead>\n              <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th></th>\n              </tr>\n          </thead>\n          <tbody>\n          { list.length > 0 && list.map((u, index) =>\n              <tr key={ index }>\n                <td>{ u.name }</td>\n                <td>{ u.email }</td>\n                <td>\n                <Link to={`/user/${u.id}/edit`} className=\"button is-light\">\n                  Edit\n                </Link>&nbsp;\n                <Button className=\"button is-danger\" onClick={() => this.handleDelete(u)}>\n                  Delete\n                </Button>\n                </td>\n              </tr>\n          ) }\n          </tbody>\n      </Table>\n      </Layout>\n    )\n  }\n\n}\n\nconst mapStateToProps = ({ user }) => {\n  return { user }\n}\n\nexport default connect(mapStateToProps)(UserPage);\n"],"sourceRoot":""}